name: CI

on:
  pull_request:
  push:
    branches: [main]

# Auto-cancel previous runs on the same PR/branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# Needed for posting test summaries/annotations
permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  tests:
    name: tests (shard ${{ matrix.shard_index + 1 }}/${{ matrix.total_shards }})
    runs-on: ubuntu-latest
    timeout-minutes: 25
    strategy:
      fail-fast: false
      matrix:
        total_shards: [8]
        shard_index: [0, 1, 2, 3, 4, 5, 6, 7]
    env:
      # Ensure Django loads test settings; manage.py still imports config.settings first
      DJANGO_SETTINGS_MODULE: config.test_settings
      PYTHONUNBUFFERED: "1"
      TEST_OUTPUT_DIR: test-results

      # Satisfy config.settings import before test settings override DB to SQLite
      DJANGO_SECRET_KEY: test-secret
      GOBII_ENCRYPTION_KEY: dummy-encryption-key-for-testing
      POSTGRES_DB: test
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_HOST: localhost
      POSTGRES_PORT: "5432"
      REDIS_URL: redis://localhost:6379/0

      # Satisfy LLM fail-fast check; any one provider key is enough
      OPENAI_API_KEY: dummy
      # Disable Celery worker self-shutdown logic in tests to avoid interfering with CI runner
      BROWSER_USE_TASK_MAX_COUNT: "0"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up uv (with cache)
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          ignore-nothing-to-cache: true

      - name: Select tests for shard
        id: select
        run: |
          set -euo pipefail
          total=${{ matrix.total_shards }}
          index=${{ matrix.shard_index }}
          mapfile -t files < <(ls -1 tests/unit/test_*.py | sort)
          echo "Found ${#files[@]} test files total; selecting shard $index of $total" >&2
          i=0
          labels=()
          for f in "${files[@]}"; do
            if (( i % total == index )); then
              mod=${f%.py}
              mod=${mod//\//.}
              labels+=("$mod")
            fi
            ((i++))
          done
          if (( ${#labels[@]} == 0 )); then
            echo "No tests selected for this shard (index=$index)." >&2
          fi
          printf '%s\n' "${labels[@]}" > selected-tests.txt
          echo "Selected ${#labels[@]} labels:" >&2
          sed -n '1,200p' selected-tests.txt >&2

      - name: Run Django tests (JUnit XML via uvx)
        run: |
          set -euo pipefail
          mkdir -p "$TEST_OUTPUT_DIR"
          if [[ ! -s selected-tests.txt ]]; then
            echo "No tests in this shard; exiting successfully."
            exit 0
          fi
          # Read labels into an array safely
          mapfile -t LABELS < selected-tests.txt
          uvx --python 3.12 --managed-python \
            --project . \
            --with-editable . \
            --with unittest-xml-reporting \
            python manage.py test "${LABELS[@]}" \
              --settings=config.test_settings \
              --parallel auto \
              --testrunner=xmlrunner.extra.djangotestrunner.XMLTestRunner
          # Some versions of xmlrunner write TEST-*.xml to CWD even when TEST_OUTPUT_DIR is set.
          # Collect those into the output directory so the publisher finds them.
          shopt -s nullglob || true
          for f in TEST-*.xml; do mv "$f" "$TEST_OUTPUT_DIR/"; done || true

      - name: Publish test results to PR
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: |
            test-results/**/*.xml
            TEST-*.xml
          check_name: "Test Results (shard ${{ matrix.shard_index + 1 }}/${{ matrix.total_shards }})"
          comment_mode: off
